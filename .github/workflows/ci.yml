name: CI + Deploy (Frontend)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  frontend-ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: my_test_db
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: my_test_db
      DB_HOST: localhost
      DB_PORT: 5432
      NODE_ENV: test

    steps:
      - name: Checkout frontend
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install frontend dependencies
        run: npm install

      - name: Start frontend (Vite) in background
        run: |
          nohup npm run dev > frontend.log 2>&1 &
          sleep 5

      - name: Clone backend repo securely
        run: git clone https://x-access-token:${{ secrets.GH_PAT }}@github.com/masamichisaito/my-api-backend.git ../my-api-backend

      - name: Install backend dependencies
        run: |
          cd ../my-api-backend
          npm install

      - name: Write test .env for backend
        run: |
          echo "DB_USERNAME=postgres" >> ../my-api-backend/.env.test
          echo "DB_PASSWORD=postgres" >> ../my-api-backend/.env.test
          echo "DB_NAME=my_test_db" >> ../my-api-backend/.env.test
          echo "DB_HOST=localhost" >> ../my-api-backend/.env.test
          echo "DB_PORT=5432" >> ../my-api-backend/.env.test
          echo "NODE_ENV=test" >> ../my-api-backend/.env.test

      - name: Start backend server in background
        run: |
          cd ../my-api-backend
          nohup node index.js > backend.log 2>&1 &
          sleep 5

      - name: Wait for backend
        run: npx wait-on http://localhost:3000

      - name: Wait for frontend
        run: npx wait-on http://localhost:5173

      - name: Install Cypress
        run: npx cypress install

      - name: Run Cypress E2E tests
        run: npm run test:e2e

  deploy-frontend:
    needs: frontend-ci
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Trigger Render Frontend Deploy Hook
        run: curl -X POST ${{ secrets.RENDER_FRONT_DEPLOY_HOOK_URL }}
